
# FFDDORF vars
define OWNAS =  207871;
define OWNIP =  5.1.66.10;
define OWNIPv6 = 2001:678:e68:ff00::10;
define OWNNET = 45.151.166.0/24;
define OWNNETv6 = 2001:678:b7c::/48;
define OWNNETSET = [45.151.166.0/24];
define OWNNETSETv6 = [2001:678:b7c::/48];
define OWNNETSETMORESPECIFIC = [45.151.166.0/24+];
define OWNNETSETv6MORESPECIFIC = [2001:678:b7c::/48+];
define AS_FFMUC = 212567;
define TRANSIT_PEER4 = 172.32.0.34;
define TRANSIT_PEER6 = 2001:678:e68:400::1;

log syslog all;

protocol device {
}

protocol direct {
        ipv4;                   # Connect to default IPv4 table
        ipv6;                   # ... and to default IPv6 table
}
protocol kernel {
    ipv4 {                  # Connect protocol to IPv4 table by channel
        import all;       # Import to table, default is import all
        export filter {
            if net ~ [ 0.0.0.0/0 ] then {
                krt_prefsrc = 5.1.66.10;
                accept;
            }
            if net ~ OWNNETSETMORESPECIFIC then {
                accept;
            }
        };
    };
}
protocol kernel {
    ipv6 {
        import all;       # Import to table, default is import all
        export filter {
            if net ~ [ ::/0 ] then {
                krt_prefsrc = 2001:678:e68:ff00::10;
                accept;
            }
            if net ~ OWNNETSETv6MORESPECIFIC then {
                accept;
            }
        };
    };
}





filter DEFAULT {
  if net ~ [ 0.0.0.0/0 ] then {
    accept;
  }
  reject;
}

filter DEFAULT6 {
  if net ~ [ ::/0 ] then {
    accept;
  }
  reject;
}

filter EXTERNAL_OUT {
  if net ~ [5.1.66.10/32] then {
    accept;
  }
  reject;
}

filter EXTERNAL6_OUT {
  if net ~ [2001:678:e68:ff00::10/128] then  {
    accept;
  }
  reject;
}
protocol bgp vlan101_v4 {
        description "Uplink";
        local 172.31.0.44 as 65101;
        neighbor 172.31.0.33 as 212567;
        ipv4 {
                import filter DEFAULT;
                export filter EXTERNAL_OUT;
        };
}
protocol bgp vlan101_v6 {
        local 2001:678:e68:fff0::c as 65101;
        neighbor 2001:678:e68:fff0::1 as 212567;
        ipv6 {
                import filter DEFAULT6;
                export filter EXTERNAL6_OUT;
        };
}

# FFDDORF config
# announced net
protocol static {
    ipv4;
    route OWNNET reject;
}

# announced net
protocol static {
    ipv6;
    route OWNNETv6 reject;
}

filter FFDDORF_OUT4 {
    if net ~ OWNNETSET then {
        bgp_path.prepend(OWNAS);
        bgp_path.prepend(OWNAS);
        bgp_path.prepend(OWNAS);
        bgp_path.prepend(OWNAS);
        accept;
    }
    reject;
}

filter FFDDORF_OUT6 {
    if net ~ OWNNETSETv6 then {
        bgp_path.prepend(OWNAS);
        bgp_path.prepend(OWNAS);
        bgp_path.prepend(OWNAS);
        bgp_path.prepend(OWNAS);
        accept;
    }
    reject;
}

# transit v4
protocol bgp transit4 {
    local OWNIP as OWNAS;
    neighbor TRANSIT_PEER4 as AS_FFMUC;
    multihop 2;

    ipv4 {
        import none;
        export filter FFDDORF_OUT4;
    };
}

protocol bgp transit6 {
    local OWNIPv6 as OWNAS;
    neighbor TRANSIT_PEER6 as AS_FFMUC;
    multihop 2;

    ipv6 {
        import none;
        export filter FFDDORF_OUT6;
    };
}

filter default4 {
    if net = 0.0.0.0/0 then {
      accept;
    }
    reject;
}

filter default6 {
    if net = ::/0 then {
      accept;
    }
    reject;
}

# locations
filter FFDDORF_INT_R9_4 {
    if net = 45.151.166.13/32 then  {
        accept;
    }
    reject;
}
filter FFDDORF_INT_R9_6 {
    if net = 2001:678:b7c:1300::/56 then  {
        accept;
    }
    reject;
}

# location R9 (voelklinger)
protocol bgp r9 {
    local 10.129.0.2 as OWNAS;
    neighbor 10.129.0.3 as OWNAS;

    ipv4 {
        next hop self;
        import filter FFDDORF_INT_R9_4;
        export filter default4;
    };
}

protocol bgp r9_v6 {
    local fdcb:aa6b:5532:2::1 as OWNAS;
    neighbor fdcb:aa6b:5532:2::2 as OWNAS;

    ipv6 {
        next hop self;
        import filter FFDDORF_INT_R9_6;
        export filter default6;
    };
}

filter FFDDORF_INT_R10_4 {
    if net = 45.151.166.14/32 then  {
        accept;
    }
    reject;
}
filter FFDDORF_INT_R10_6 {
    if net = 2001:678:b7c:1400::/56 then  {
        accept;
    }
    reject;
}

protocol bgp r10 {
    local 10.129.0.4 as OWNAS;
    neighbor 10.129.0.5 as OWNAS;

    ipv4 {
        next hop self;
        import filter FFDDORF_INT_R10_4;
        export filter default4;
    };
}

protocol bgp r10_v6 {
    local fdcb:aa6b:5532:3::1 as OWNAS;
    neighbor fdcb:aa6b:5532:3::2 as OWNAS;

    ipv6 {
        next hop self;
        import filter FFDDORF_INT_R10_6;
        export filter default6;
    };
}

filter FFDDORF_INT_R14_4 {
    if net = 45.151.166.16/32 then  {
        accept;
    }
    reject;
}

filter FFDDORF_INT_R14_6 {
    if net = 2001:678:b7c:1600::/56 then  {
        accept;
    }
    reject;
}

protocol bgp r14 {
    local 10.129.0.14 as OWNAS;
    neighbor 10.129.0.15 as OWNAS;

    ipv4 {
        next hop self;
        import filter FFDDORF_INT_R14_4;
        export filter default4;
    };
}

protocol bgp r14_v6 {
    local fdcb:aa6b:5532:8::1 as OWNAS;
    neighbor fdcb:aa6b:5532:8::2 as OWNAS;

    ipv6 {
        next hop self;
        import filter FFDDORF_INT_R14_6;
        export filter default6;
    };
}

filter FFDDORF_INT_R19_4 {
    if net = 45.151.166.17/32 then  {
        accept;
    }
    reject;
}

filter FFDDORF_INT_R19_6 {
    if net = 2001:678:b7c:1700::/56 then  {
        accept;
    }
    reject;
}

protocol bgp r19 {
    local 10.129.0.46 as OWNAS;
    neighbor 10.129.0.47 as OWNAS;

    ipv4 {
        next hop self;
        import filter FFDDORF_INT_R19_4;
        export filter default4;
    };
}

protocol bgp r19_v6 {
    local fdcb:aa6b:5532:16::1 as OWNAS;
    neighbor fdcb:aa6b:5532:16::2 as OWNAS;

    ipv6 {
        next hop self;
        import filter FFDDORF_INT_R19_6;
        export filter default6;
    };
}

